/********************
** Breakpoints
********************/
$bp-extrasmall:           321;
$bp-small:           768;
$bp-medium:           1024;
$bp-large:           1200;
$bp-extralarge:          1600;

/********************
** Media Queries
********************/

$MQs : true;
$mq-extrasmall:     "only screen and (max-width: #{$bp-extrasmall}px)";
$mq-small-force:     "only screen and (max-width: #{$bp-small}px)";
$mq-small:     "only screen and (min-width: #{$bp-small}px)";
$mq-medium:       "only screen and (min-width: #{$bp-medium}px)";
$mq-large:       "only screen and (min-width: #{$bp-large}px)";
$mq-extralarge:      "only screen and (min-width: #{$bp-extralarge}px)";
$mq-retina:     "only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx)";

/********************
** Fonts
********************/
$f-sans-serif: "soleil", Arial, sans-serif;
$f-serif: "edita", Georgia,serif;
@font-face {
  font-family: "icons";
  src:url("fonts/caleb.eot");
  src:url("fonts/caleb.eot?#iefix") format("embedded-opentype"),
  url("fonts/caleb.woff") format("woff"),
  url("fonts/caleb.ttf") format("truetype"),
  url("fonts/caleb.svg#caleb") format("svg");
  font-weight: normal;
  font-style: normal;
}


/********************
** Colors
********************/
$white: #ffffff;
$black: #262425;
$grey: #7d7c7a;
$orange: #f15c44;
$lightGray: #d9d9d9;
$darkGray: #2e2e2e;

/********************
** Mixins
********************/

@mixin border-50{
    @include border-radius(50%, 50%);
}

@mixin border-0{
    @include border-radius(0, 0);
}

@mixin bp($point) {
  @if ($MQs) {
    @if $point == x-sml {
        @media #{$mq-extrasmall} { @content; }
      }
      @else if $point == sml {
        @media #{$mq-small} { @content; }
      }
      @else if $point == sml-force {
        @media #{$mq-small-force} { @content; }
      }
      @else if $point == med {
        @media #{$mq-medium} { @content; }
      }
      @else if $point == lrg {
        @media #{$mq-large}  { @content; }
      }
      @else if $point == xlg {
        @media #{$mq-extralarge}  { @content; }
      }
      @else if $point == retina {
        @media #{$mq-retina}  { @content; }
      }
  }
  @else {
    @if $point != retina {
      @content;
    }
  }
}

@mixin linear-gradient($fromColor, $toColor) {
  $svg-gradient-shim-threshold: 1 !global;
  @include background-image(linear-gradient(-120deg, $fromColor , $toColor));
}

@mixin column-count($count) {
  @include prefixed-properties(multicolumn, $multicolumn-support-threshold, (column-count: $count));
}
@mixin column-gap($width) {
  @include prefixed-properties(multicolumn, $multicolumn-support-threshold, (column-gap: $width));
}
@mixin column-width($width) {
  @include prefixed-properties(multicolumn, $multicolumn-support-threshold, (column-width: $width));
}


@mixin backgroundContain{
  background-repeat: no-repeat;
  background-position: 50% 50%;
  background-size: cover;
  background-repeat: no-repeat;
}


@mixin vertical-align {
  position: relative;
  top: 50%;
  @include transform(translateY(-50%));
  //need @include transform-style( preserve-3d ) on parent 
}



@mixin cf {
    zoom:1; 
    &:before, &:after {
        content: "\0020";
        display: block;
        height: 0;
        overflow: hidden;
    }
    &:after {
        clear: both;
    }
}

.cf{
    @include cf;
}

.uppercase {
  text-transform: uppercase;
}

@mixin ds($color:$black, $left:1px, $top:1px, $spread:3px, $blur:0px){
    @include box-shadow(rgba($color, 0.65) $left $top $spread $blur);
}

$baseFontSize: 16;
@mixin font-size($pixelSize: $baseFontSize) {
    font-size: #{$pixelSize}px;
    font-size: #{$pixelSize / $baseFontSize}rem;
}

@mixin line-height($pixelSize: $baseFontSize) {
    line-height: #{$pixelSize}px;
    line-height: #{$pixelSize / $baseFontSize}rem;
}

@mixin transition($property, $duration, $function: linear) { 
  -webkit-transition: $property $duration $function;
  -moz-transition:  $property $duration $function;
  -ms-transition:   $property $duration $function;
  -o-transition:    $property $duration $function;
  transition:     $property $duration $function;
}

@mixin transform($transform) {
  -webkit-transform:  $transform;
  -moz-transform:   $transform;
  -ms-transform:    $transform;
  -o-transform:     $transform;
  transform:      $transform;
}

@mixin highlightText($val){
  -webkit-touch-callout:$val;
  -webkit-user-select:$val;
  -khtml-user-select:$val;
  -moz-user-select:$val;
  -ms-user-select:$val;
  user-select:$val;
  //-webkit-tap-highlight-color:rgba(0,0,0,0);//might not need this 
}

@keyframes fadeIn{
  0%{
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes fadeInDrop{
  0%{
    opacity: 0;
    transform: translateY(-5px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}